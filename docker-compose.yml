version: '3'

services: # New Backend Rust service
  oort-db:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=oort_cluster
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  oort-ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "bash", "/usr/src/app/preload_models.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./ml/src:/usr/src/app/src # Map source code
      - ./ml/Cargo.toml:/usr/src/app/Cargo.toml
      - ./ml/Cargo.lock:/usr/src/app/Cargo.lock
      - rust_target_cache:/usr/src/app/target # Cache compiled artifacts
    environment:
      - RUST_LOG=info
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      - ollama
      - oort-db

  # Frontend React service
  oort-fe-app:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - oort-ml

  # Ollama service for embeddings and LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: "serve"

volumes:
  ollama_data:
  rust_target_cache:
  cassandra_data:
