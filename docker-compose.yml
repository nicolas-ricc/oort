version: '3'

services: # New Backend Rust service
  oort-db:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=oort_cluster
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=512M
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  cassandra-init:
    image: cassandra:latest
    depends_on:
      oort-db:
        condition: service_healthy
    command: cqlsh oort-db -f /init/data.cql
    volumes:
      - ./db/data.cql:/init/data.cql

  oort-ml:
    build:
      context: ./ml
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "bash", "/usr/src/app/preload_models.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./ml/src:/usr/src/app/src # Map source code
      - ./ml/Cargo.toml:/usr/src/app/Cargo.toml
      - ./ml/Cargo.lock:/usr/src/app/Cargo.lock
      - rust_target_cache:/usr/src/app/target # Cache compiled artifacts
    environment:
      - RUST_LOG=info
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      oort-db:
        condition: service_healthy

  # Frontend React service
  oort-fe-app:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - oort-ml

  # Ollama service for embeddings and LLM
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: "serve"
    
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    environment:
      - TERM=linux
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel,hadesarchitect-cassandra-datasource
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin 
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    depends_on:
      - oort-db


volumes:
  ollama_data:
  rust_target_cache:
  cassandra_data:
  grafana_storage: {}
